# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: claim.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import stream_pb2
import cert_pb2
import signature_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='claim.proto',
  package='',
  serialized_pb=_b('\n\x0b\x63laim.proto\x1a\x0cstream.proto\x1a\ncert.proto\x1a\x0fsignature.proto\"\xae\x01\n\x05\x43laim\x12\x1f\n\x07version\x18\x01 \x02(\x0e\x32\x0e.Claim.Version\x12\x19\n\x06stream\x18\x02 \x01(\x0b\x32\x07.StreamH\x00\x12\x1c\n\x0b\x63\x65rtificate\x18\x03 \x01(\x0b\x32\x05.CertH\x00\x12\'\n\x13publisher_signature\x18\x04 \x01(\x0b\x32\n.Signature\"\x15\n\x07Version\x12\n\n\x06_0_0_1\x10\x00\x42\x0b\n\tClaimType')
  ,
  dependencies=[stream_pb2.DESCRIPTOR, cert_pb2.DESCRIPTOR, signature_pb2.DESCRIPTOR, ])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_CLAIM_VERSION = _descriptor.EnumDescriptor(
  name='Version',
  full_name='Claim.Version',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='_0_0_1', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=199,
  serialized_end=220,
)
_sym_db.RegisterEnumDescriptor(_CLAIM_VERSION)


_CLAIM = _descriptor.Descriptor(
  name='Claim',
  full_name='Claim',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='Claim.version', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stream', full_name='Claim.stream', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='certificate', full_name='Claim.certificate', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='publisher_signature', full_name='Claim.publisher_signature', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CLAIM_VERSION,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='ClaimType', full_name='Claim.ClaimType',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=59,
  serialized_end=233,
)

_CLAIM.fields_by_name['version'].enum_type = _CLAIM_VERSION
_CLAIM.fields_by_name['stream'].message_type = stream_pb2._STREAM
_CLAIM.fields_by_name['certificate'].message_type = cert_pb2._CERT
_CLAIM.fields_by_name['publisher_signature'].message_type = signature_pb2._SIGNATURE
_CLAIM_VERSION.containing_type = _CLAIM
_CLAIM.oneofs_by_name['ClaimType'].fields.append(
  _CLAIM.fields_by_name['stream'])
_CLAIM.fields_by_name['stream'].containing_oneof = _CLAIM.oneofs_by_name['ClaimType']
_CLAIM.oneofs_by_name['ClaimType'].fields.append(
  _CLAIM.fields_by_name['certificate'])
_CLAIM.fields_by_name['certificate'].containing_oneof = _CLAIM.oneofs_by_name['ClaimType']
DESCRIPTOR.message_types_by_name['Claim'] = _CLAIM

Claim = _reflection.GeneratedProtocolMessageType('Claim', (_message.Message,), dict(
  DESCRIPTOR = _CLAIM,
  __module__ = 'claim_pb2'
  # @@protoc_insertion_point(class_scope:Claim)
  ))
_sym_db.RegisterMessage(Claim)


# @@protoc_insertion_point(module_scope)
