# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public_key.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='public_key.proto',
  package='',
  serialized_pb=_b('\n\x10public_key.proto\"\xd0\x01\n\tPublicKey\x12#\n\x07version\x18\x01 \x02(\x0e\x32\x12.PublicKey.Version\x12#\n\x07keyType\x18\x03 \x02(\x0e\x32\x12.PublicKey.KeyType\x12\x11\n\tpublicKey\x18\x04 \x02(\x0c\"*\n\x07Version\x12\x13\n\x0fUNKNOWN_VERSION\x10\x00\x12\n\n\x06_0_0_1\x10\x01\":\n\x07KeyType\x12\x1b\n\x17UNKNOWN_PUBLIC_KEY_TYPE\x10\x00\x12\x07\n\x03RSA\x10\x01\x12\t\n\x05\x45\x43\x44SA\x10\x02')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_PUBLICKEY_VERSION = _descriptor.EnumDescriptor(
  name='Version',
  full_name='PublicKey.Version',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_VERSION', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='_0_0_1', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=127,
  serialized_end=169,
)
_sym_db.RegisterEnumDescriptor(_PUBLICKEY_VERSION)

_PUBLICKEY_KEYTYPE = _descriptor.EnumDescriptor(
  name='KeyType',
  full_name='PublicKey.KeyType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_PUBLIC_KEY_TYPE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSA', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ECDSA', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=171,
  serialized_end=229,
)
_sym_db.RegisterEnumDescriptor(_PUBLICKEY_KEYTYPE)


_PUBLICKEY = _descriptor.Descriptor(
  name='PublicKey',
  full_name='PublicKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='PublicKey.version', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='keyType', full_name='PublicKey.keyType', index=1,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='publicKey', full_name='PublicKey.publicKey', index=2,
      number=4, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PUBLICKEY_VERSION,
    _PUBLICKEY_KEYTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=229,
)

_PUBLICKEY.fields_by_name['version'].enum_type = _PUBLICKEY_VERSION
_PUBLICKEY.fields_by_name['keyType'].enum_type = _PUBLICKEY_KEYTYPE
_PUBLICKEY_VERSION.containing_type = _PUBLICKEY
_PUBLICKEY_KEYTYPE.containing_type = _PUBLICKEY
DESCRIPTOR.message_types_by_name['PublicKey'] = _PUBLICKEY

PublicKey = _reflection.GeneratedProtocolMessageType('PublicKey', (_message.Message,), dict(
  DESCRIPTOR = _PUBLICKEY,
  __module__ = 'public_key_pb2'
  # @@protoc_insertion_point(class_scope:PublicKey)
  ))
_sym_db.RegisterMessage(PublicKey)


# @@protoc_insertion_point(module_scope)
